{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "IR",
  "patterns": [
    { "include": "#comments" },
    { "include": "#definitions" },
    { "include": "#keywords" },
    { "include": "#names" },
    { "include": "#strings" },
    { "include": "#numbers" },
    { "include": "#holes" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "match": "//.*$\n?",
          "name": "comment.line.double-slash.syntax"
        }
      ]
    },
    "definitions": {
      "patterns": [
        {
          "begin": "\\s*(def)\\s+([a-zA-Z][a-z-A-Z0-9_$]*)\\b",
          "end": "[=\\n]",
          "beginCaptures": {
            "1": { "name": "keyword.declaration.function" },
            "2": { "name": "entity.name.function" }
          },
          "patterns": [{ "include": "#parameters" }]
        },
        {
          "match": "\\s*(val)\\s+([a-zA-Z][a-z-A-Z0-9_$]*)\\b",
          "captures": {
            "1": { "name": "keyword.declaration.val" },
            "2": { "name": "variable" }
          }
        },
        {
          "match": "\\s*(var)\\s+([a-zA-Z][a-z-A-Z0-9_$]*)\\b",
          "captures": {
            "1": { "name": "keyword.declaration.var" },
            "2": { "name": "variable" }
          }
        },
        {
          "match": "\\s*(type|effect)\\s+([a-zA-Z][a-z-A-Z0-9_$]*)\\b",
          "captures": {
            "1": { "name": "keyword.declaration.type" },
            "2": { "name": "entity.name.type" }
          }
        }
      ]
    },
    "parameters": {
      "patterns": [
        {
          "match": "\\b([a-z][a-zA-Z0-9_$]*)(?:)",
          "name": "variable.parameter"
        },
        {
          "match": "\\b([A-Z][a-zA-Z0-9_$]*)(?:)",
          "name": "entity.name.type"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "match": "\\b(module|import|def|fun|val|var|effect|type|match|case|record|extern|include|box|unbox|in|region|new|let|stack)\\b",
          "name": "keyword.syntax"
        },
        {
          "match": "\\b(resume|while|try|with|if|else|do|return|switch|push|jump|shift0)\\b",
          "name": "keyword.control"
        }
      ]
    },
    "names": {
      "patterns": [
        {
          "match": "\\b(true|false)\\b",
          "name": "constant.language"
        },
        {
          "match": "\\b([a-z][a-zA-Z0-9_]*)\\b[\\s]*[({\\[]",
          "captures": {
            "1": { "name": "entity.name.function" }
          }
        },
        {
          "match": "\\b[a-z][a-zA-Z0-9_]*\\b",
          "name": "variable"
        },
        {
          "match": "\\b[A-Z][a-zA-Z0-9_]*\\b",
          "name": "entity.name.type"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "begin": "\"",
          "end": "\"",
          "name": "string.quoted.double.literal"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "match": "\\b[0-9]+",
          "name": "constant.numeric"
        }
      ]
    },
    "punctuation": {
      "patterns": [
        {
          "match": "[{}\\(\\)\\[\\];,]",
          "name": "punctuation.separator"
        }
      ]
    },
    "holes": {
      "patterns": [
        {
          "begin": "<{",
          "end": "}>",
          "name": "effekt.hole",
          "patterns": [
            {
              "include": "source.ir"
            }
          ]
        }
      ]
    }
  },
  "scopeName": "source.ir"
}
